services:
  - name: MetaService
    calls:
    - name: GetResourceTypesCall
      method: http.MethodGet
      response_type: '[]resource.ResourceType'
      path: /ResourceTypes
    - name: GetServiceProviderConfigCall
      method: http.MethodGet
      response_type: '*resource.ServiceProviderConfig'
      path: /ServiceProviderConfig
    - name: GetSchemas
      method: http.MethodGet
      response_type: '*resource.ListResponse'
      path: '/Schemas'
    - name: GetSchema
      method: http.MethodGet
      response_type: '*resource.Schema'
      path: '/Schemas'
      makeURLTemplate: |
        func (call {{ .ObjectName }}) makeURL() string {
          return call.client.baseURL + "{{ .Path }}/" + call.id
        }
      fields:
        - name: id
          required: true

  - name: SearchService
    calls:
    - name: SearchCall
      method: http.MethodPost
      resource: SearchRequest
      response_type: resource.ListResponse
      path: /.search
      jsonPayload: true
  - name: UserService
    calls:
    - name: GetUserCall
      method_name: Get
      method: http.MethodGet
      resource: PartialResourceRepresentationRequest
      response_type: resource.User
      path: /Users
      makeURLTemplate: |
        func (call {{ .ObjectName }}) makeURL() string {
          return call.client.baseURL + "{{ .Path }}/" + call.id
        }
      fields:
        - name: id
          required: true
    - name: CreateUserCall
      method_name: Create
      method: http.MethodPost
      resource: User
      path: /Users
      jsonPayload: true
      successStatus: http.StatusCreated
      allowedMutability:
        - readWrite
        - immutable
        - writeOnly
    - name: ReplaceUserCall
      method_name: Replace
      method: http.MethodPut
      resource: User
      path: /Users
      makeURLTemplate: |
        func (call {{ .ObjectName }}) makeURL() string {
          return call.client.baseURL + "{{ .Path }}/" + call.id
        }
      jsonPayload: true
      fields:
        - name: id
          required: true
      #    - name: ModifyUserCall
      #      method: http.MethodPatch
      #      builder: resource.UserBuilder
      allowedMutability:
        - readWrite
        - writeOnly
    - name: DeleteUserCall
      method_name: Delete
      method: http.MethodDelete
      resource: User
      path: /Users
      successStatus: http.StatusNoContent
      makeURLTemplate: |
        func (call {{ .ObjectName }}) makeURL() string {
          return call.client.baseURL + "{{ .Path }}/" + call.id
        }
      response_type: none
      fields:
        - name: id
          required: true
    - name: SearchUserCall
      method_name: Search
      method: http.MethodPost
      resource: SearchRequest
      response_type: resource.ListResponse
      path: /Users/.search
      jsonPayload: true
  - name: GroupService
    calls:
    - name: GetGroupCall
      method_name: Get
      method: http.MethodGet
      resource: PartialResourceRepresentationRequest
      response_type: resource.Group
      path: /Groups
      makeURLTemplate: |
        func (call {{ .ObjectName }}) makeURL() string {
          return call.client.baseURL + "{{ .Path }}/" + call.id
        }
      fields:
        - name: id
          required: true
    - name: CreateGroupCall
      method_name: Create
      method: http.MethodPost
      resource: Group
      path: /Groups
      jsonPayload: true
      successStatus: http.StatusCreated
      allowedMutability:
        - readWrite
        - immutable
        - writeOnly
    - name: ReplaceGroupCall
      method_name: Replace
      method: http.MethodPut
      resource: Group
      path: /Groups
      makeURLTemplate: |
        func (call {{ .ObjectName }}) makeURL() string {
          return call.client.baseURL + "{{ .Path }}/" + call.id
        }
      jsonPayload: true
      fields:
        - name: id
          required: true
      allowedMutability:
        - readWrite
        - writeOnly
      #    - name: ModifyGroupCall
      #      method: http.MethodPatch
      #      builder: resource.GroupBuilder
    - name: DeleteGroupCall
      method_name: Delete
      method: http.MethodDelete
      resource: Group
      path: /Groups
      successStatus: http.StatusNoContent
      makeURLTemplate: |
        func (call {{ .ObjectName }}) makeURL() string {
          return call.client.baseURL + "{{ .Path }}/" + call.id
        }
      response_type: none
      fields:
        - name: id
          required: true
    - name: SearchGroupCall
      method_name: Search
      method: http.MethodPost
      resource: SearchRequest
      response_type: resource.ListResponse
      path: /Groups/.search
      jsonPayload: true


