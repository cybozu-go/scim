common:
  - name: id
    required: true
    generated: true
    ent_type: "uuid.UUID{}"
    ent_default: "uuid.New"
    ent_build_method: UUID
  - name: externalID
    json: externalId
  - name: meta
    type: '*Meta'
objects:
  - name: Meta
    skipCommonFields: true
    fields:
      - name: resourceType
      - name: created
        type: time.Time
      - name: lastModified
        type: time.Time
      - name: location
      - name: version
  - name: User
    schema: "urn:ietf:params:scim:schemas:core:2.0:User"
    top_level: true
    fields:
      - name: userName
        required: true
        ent_notempty: true
        ent_unique: true
      - name: displayName
      - name: name
        type: '*Names'
      - name: nickName
      - name: profileUrl
        unexported_name: profileURL
        exported_name: ProfileURL
        validator: validateProfileURL
        json: profileUrl
      - name: title
      - name: userType
      - name: preferredLanguage
      - name: locale
      - name: timezone
      - name: active
        type: bool
      - name: password
        ent_notempty: true
        ent_sensitive: true
      - name: emails
        type: '[]*Email'
        validator: validateEmails
      - name: phoneNumbers
        type: '[]string'
      - name: ims
        exported_name: IMS
        type: '[]string'
      - name: addresses
        type: '[]string'
      - name: groups
        type: '[]string'
      - name: entitlements
        type: '[]string'
      - name: roles
        type: '[]*Role'
      - name: x509Certificates
        type: '[]string'
  - name: Email
    skipCommonFields: true
    fields:
      - name: value
        required: true
      - name: display
      - name: typ
        ent_name: type
        exported_name: Type
        json: type
      - name: primary
        type: bool
  - name: Role
    skipCommonFields: true
    fields:
      - name: value
        required: true
      - name: display
      - name: typ
        ent_name: type
        exported_name: Type
        json: type
      - name: primary
        type: bool
  - name: Names
    skipCommonFields: true
    fields:
      - name: formatted
      - name: familyName 
      - name: givenName
      - name: middleName
      - name: honorificPrefix
      - name: honorificSuffix
  - name: EnterpriseUser
    schema: 'urn:ietf:params:scim:schemas:extension:enterprise:2.0:User'
    skipCommonFields: true
    fields:
      - name: employeeNumber
      - name: costCenter
      - name: organization
      - name: division
      - name: department
      - name: manager
        type: '*EnterpriseManager'
  - name: EnterpriseManager
    skipCommonFields: true
    fields:
      - name: id
      - name: ref
        json: '$ref'
        exported_name: Reference
      - name: displayName
        readOnly: true
  - name: Group
    schema: urn:ietf:params:scim:schemas:core:2.0:Group
    ent_conversion_helper: groupResourceFromEntHelper
    top_level: true
    fields:
      - name: displayName
      - name: members
        type: '[]*GroupMember'
  - name: GroupMember
    skipCommonFields: true
    fields:
      - name: value
      - name: ref
        json: '$ref'
      - name: display
  - name: GenericSupport
    skipCommonFields: true
    fields:
      - name: supported
        type: bool
        required: true
  - name: BulkSupport
    skipCommonFields: true
    fields:
      - name: supported
        type: bool
        required: true
      - name: maxOperations
        type: int
        required: true
      - name: maxPayloadSize
        type: int
        required: true
  - name: FilterSupport
    skipCommonFields: true
    fields:
      - name: supported
        type: bool
        required: true
      - name: maxResults
        type: int
        required: true
  - name: AuthenticationScheme
    skipCommonFields: true
    fields:
      - name: typ
        json: type
        exported_name: Type
        type: AuthenticationSchemeType
        required: true
      - name: name
        required: true
      - name: description
        required: true
      - name: specURI
        json: specUri
      - name: documentationURI
        json: documentationUri
  - name: ServiceProviderConfig
    schema: urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
    skipCommonFields: true
    top_level: true
    fields:
      - name: documentationURI
        json: documentationUri
      - name: patch
        required: true
        type: '*GenericSupport'
      - name: bulk
        required: true
        type: '*BulkSupport'
      - name: filter
        required: true
        type: '*FilterSupport'
      - name: changePassword
        required: true
        type: '*GenericSupport'
      - name: sort
        required: true
        type: '*GenericSupport'
      - name: etag
        required: true
        type: '*GenericSupport'
      - name: authenticationSchemes
        type: '[]*AuthenticationScheme'
        required: true
  - name: SearchRequest
    schema: urn:ietf:params:scim:api:messages:2.0:SearchRequest
    skipCommonFields: true
    fields:
      - name: attributes
        type: "[]string"
      - name: exludedAttributes
        type: "[]string"
      - name: filter
      - name: sortBy
      - name: sortOrder
      - name: startIndex
        type: int
      - name: count
        type: int
  - name: ListResponse
    schema: urn:ietf:params:scim:api:messages:2.0:ListResponse
    skipCommonFields: true
    # ListResponse is a pain, because while in Go we want type safety in the returned
    # list of objects, the RFC states that the "Resources" field may contain either
    # any of the possible resources (and why on earth is this the only field that
    # is capitalized? WHY?)
    #
    # To make this slightly easier, we're going to have to hand-roll the UnmarshalJSON
    # method instead of generating one
    skip_unmarshal_json_hook: true
    fields:
      - name: totalResults
        type: int
      - name: itemsPerPage
        type: int
      - name: startIndex
        type: int
      - name: Resources
        type: '[]interface{}'
  - name: PartialResourceRepresentationRequest
    skipCommonFields: true
    fields:
      - name: attributes
        type: "[]string"
      - name: excludedAttributes
        type: "[]string"
  - name: Schema
    skipCommonFields: true
    fields:
      - name: id
        required: true
      - name: name
      - name: description
      - name: attributes
        type: '[]*SchemaAttribute'
  - name: SchemaAttribute
    skipCommonFields: true
    fields:
      - name: name
      - name: typ
        json: type
        exported_name: Type
      - name: fallbackType
        type: '*SchemaAttribute'
      - name: subAttributes
        type: '[]*SchemaAttribute'
      - name: multiValued
        type: bool
      - name: description
      - name: required
        type: bool
      - name: canonicalValues
        type: '[]interface{}'
      - name: caseExact
        type: bool
      - name: mutability
        type: Mutability
      - name: returned
        type: Returned
      - name: uniqueness
        type: Uniqueness
      - name: referenceTypes
        type: '[]string'
  - name: Error
    skipCommonFields: true
    fields:
      - name: status
        type: int
      - name: scimType
        type: ErrorType
      - name: detail
  - name: ResourceType
    skipCommonFields: true
    schema: "urn:ietf:params:scim:schemas:core:2.0:ResourceType"
    top_level: true
    fields:
      - name: id
      - name: name
      - name: description
      - name: endpoint
        required: true
      - name: schema
        required: true
      - name: schemaExtensions
        type: '[]*SchemaExtension'
  - name: SchemaExtension
    skipCommonFields: true
    fields:
      - name: schema
      - name: required
        type: bool
